type Query {
  version: String!
  messages: [Message!]!
}

input MessageInput {
  content: String!
}

input ResponseInput {
  content: String!
  messageId: Int!
}

type Mutation {
  createMessage(data: MessageInput!): Message!
  createResponse(data: ResponseInput!): Response!
  incrementLike(id: Int!): Message
  incrementDislike(id: Int!): Message
  decrementLike(id: Int!): Message
  decrementDislike(id: Int!): Message
}

type Subscription {
  newMessage: Message!
}

type Message {
  id: ID!
  content: String!
  likes: Int
  dislike: Int
  createdAt: String
  responses: [Response]
}

type Response {
  id: Int!
  content: String!
  message: Message
}
